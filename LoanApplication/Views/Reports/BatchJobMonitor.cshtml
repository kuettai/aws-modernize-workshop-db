@model LoanApplication.Models.BatchJobMonitorViewModel
@{
    ViewData["Title"] = "Batch Job Monitor";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2><i class="fas fa-tasks"></i> Batch Job Monitor</h2>
            <p class="text-muted">Monitor batch job execution status, performance, and history</p>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="fas fa-filter"></i> Filters</h5>
                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="refreshCache()">
                        <i class="fas fa-sync-alt"></i> Refresh Cache
                    </button>
                </div>
                <div class="card-body">
                    <form method="get" class="row g-3" id="filterForm">
                        <div class="col-md-4">
                            <label for="jobName" class="form-label">Job Name</label>
                            <select class="form-select" id="jobName" name="JobName">
                                <option value="">All Jobs</option>
                                @foreach (var jobName in Model.AvailableJobNames)
                                {
                                    <option value="@jobName" @(Model.Filter.JobName == jobName ? "selected" : "")>@jobName</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="daysBack" class="form-label">Days Back</label>
                            <input type="number" class="form-control" id="daysBack" name="DaysBack" 
                                   value="@Model.Filter.DaysBack" min="1" max="365">
                        </div>
                        <div class="col-md-3">
                            <label for="status" class="form-label">Status</label>
                            <select class="form-select" id="status" name="Status">
                                <option value="">All Statuses</option>
                                @foreach (var status in Model.AvailableStatuses)
                                {
                                    <option value="@status" @(Model.Filter.Status == status ? "selected" : "")>@status</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search"></i> Filter
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Statistics -->
    <div class="row mb-4">
        <div class="col-md-2">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h4>@Model.Summary.GetValueOrDefault("TotalJobs", 0)</h4>
                    <small>Total Jobs</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <h4>@Model.Summary.GetValueOrDefault("CompletedJobs", 0)</h4>
                    <small>Completed</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-danger text-white">
                <div class="card-body text-center">
                    <h4>@Model.Summary.GetValueOrDefault("FailedJobs", 0)</h4>
                    <small>Failed</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <h4>@Model.Summary.GetValueOrDefault("RunningJobs", 0)</h4>
                    <small>Running</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <h4>@Model.Summary.GetValueOrDefault("SuccessRate", 0)%</h4>
                    <small>Success Rate</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-secondary text-white">
                <div class="card-body text-center">
                    <h4>@Model.Summary.GetValueOrDefault("AvgDurationSeconds", 0)s</h4>
                    <small>Avg Duration</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Job Execution History -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="fas fa-history"></i> Job Execution History</h5>
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="autoRefresh()">
                        <i class="fas fa-sync-alt"></i> Auto Refresh: <span id="refreshStatus">OFF</span>
                    </button>
                </div>
                <div class="card-body">
                    @if (Model.JobExecutions.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="jobExecutionTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Job Name</th>
                                        <th>Type</th>
                                        <th>Report Period</th>
                                        <th>Start Time</th>
                                        <th>Duration</th>
                                        <th>Status</th>
                                        <th>Records</th>
                                        <th>Executed By</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var job in Model.JobExecutions)
                                    {
                                        <tr class="@(job.Status == "Failed" ? "table-danger" : job.Status == "Running" ? "table-warning" : "")">
                                            <td>
                                                <strong>@job.JobName</strong>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@job.JobType</span>
                                            </td>
                                            <td>@job.ReportPeriod.ToString("MMM dd, yyyy")</td>
                                            <td>@job.StartTime.ToString("MMM dd, yyyy HH:mm:ss")</td>
                                            <td>
                                                @if (job.DurationSeconds.HasValue)
                                                {
                                                    <span>@job.DurationSeconds.Value s</span>
                                                }
                                                else if (job.Status == "Running")
                                                {
                                                    <span class="text-muted">Running...</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                @switch (job.Status)
                                                {
                                                    case "Completed":
                                                        <span class="badge bg-success">@job.Status</span>
                                                        break;
                                                    case "Failed":
                                                        <span class="badge bg-danger">@job.Status</span>
                                                        break;
                                                    case "Running":
                                                        <span class="badge bg-warning">@job.Status</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary">@job.Status</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                <small>
                                                    Processed: @job.RecordsProcessed<br>
                                                    Inserted: @job.RecordsInserted
                                                </small>
                                            </td>
                                            <td>@job.ExecutedBy</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(job.ErrorMessage))
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                                            onclick="showErrorDetails('@job.ExecutionId', '@Html.Raw(Html.Encode(job.ErrorMessage))')">
                                                        <i class="fas fa-exclamation-triangle"></i> Error
                                                    </button>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        @if (Model.JobExecutions.Count >= 50)
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i> Showing latest 50 executions. Adjust filters to see more specific results.
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> No job executions found for the selected criteria.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Error Details Modal -->
<div class="modal fade" id="errorModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Job Error Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <h6>Execution ID: <span id="errorExecutionId"></span></h6>
                    <hr>
                    <pre id="errorMessage" class="mb-0"></pre>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let autoRefreshInterval;
        let isAutoRefreshEnabled = false;

        function refreshCache() {
            $.post('@Url.Action("RefreshCache")', function(data) {
                if (data.success) {
                    // Reload job names dropdown
                    $.get('@Url.Action("GetJobNames")', function(jobNames) {
                        const select = $('#jobName');
                        const currentValue = select.val();
                        select.empty().append('<option value="">All Jobs</option>');
                        jobNames.forEach(function(name) {
                            select.append(`<option value="${name}" ${name === currentValue ? 'selected' : ''}>${name}</option>`);
                        });
                    });
                    
                    alert('Cache refreshed successfully!');
                } else {
                    alert('Error refreshing cache: ' + data.message);
                }
            });
        }

        function autoRefresh() {
            if (isAutoRefreshEnabled) {
                clearInterval(autoRefreshInterval);
                isAutoRefreshEnabled = false;
                $('#refreshStatus').text('OFF');
            } else {
                autoRefreshInterval = setInterval(function() {
                    $('#filterForm').submit();
                }, 30000); // Refresh every 30 seconds
                isAutoRefreshEnabled = true;
                $('#refreshStatus').text('ON (30s)');
            }
        }

        function showErrorDetails(executionId, errorMessage) {
            $('#errorExecutionId').text(executionId);
            $('#errorMessage').text(errorMessage);
            $('#errorModal').modal('show');
        }

        $(document).ready(function() {
            // Initialize DataTable for better sorting/filtering
            if ($('#jobExecutionTable tbody tr').length > 0) {
                $('#jobExecutionTable').DataTable({
                    "pageLength": 25,
                    "order": [[3, "desc"]], // Sort by start time descending
                    "columnDefs": [
                        { "orderable": false, "targets": [8] } // Disable sorting on Actions column
                    ]
                });
            }
        });
    </script>
}