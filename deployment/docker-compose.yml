version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: loanapp-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=LoanApp123!
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - loanapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P LoanApp123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # .NET Application
  loanapplication:
    build:
      context: ../
      dockerfile: deployment/Dockerfile
    container_name: loanapp-web
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=LoanApplicationDB;User Id=sa;Password=LoanApp123!;TrustServerCertificate=true;
    ports:
      - "8080:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - loanapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (Optional - for session management)
  redis:
    image: redis:7-alpine
    container_name: loanapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - loanapp-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  loanapp-network:
    driver: bridge